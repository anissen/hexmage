
Simple vanilla game:
    ✔ No minions on board @done (23-04-15 22:20)
    ☐ 5 cards in starting hand
    ☐ 10 card deck (5 card in hand, 5 in deck)
    ☐ Vanilla minions

Simple challenging game:
    ☐ Believable AI through minimax

Simple magical game:
    ☐ Spell card: 2 damage to a minion
    ☐ Minion with 2 moves/turn
    ☐ Minion with rule: "When this minion takes damage, draw a card"

Simple costly game:
    ☐ Simple linear mana availability (ie. +1 mana/turn)
    ☐ Highlight cards that can be cast
    ☐ Subtract card cost from mana pool

Simple hexagonal game:
    ☐ Make tiles hexagonal

--- ✄ -----------------------

Tasks:
  ✔ Minimal game @done (10-02-15 19:40)
      ✔ AI vs. human, no deck, no hands, one minion on board each @done (10-02-15 19:40)
      ✔ CLI interface to choose between available actions for human @done (10-02-15 19:40)
      ✔ Multiple minions @done (10-02-15 20:40)
  ☐ Implement rules
  ☐ Make cards into files
  ☐ Make map into file
  ✔ Implement deck @done (19-03-15 21:31)
  ✔ Implement cards in hand @done (19-03-15 21:31)
  ✔ Implement casting minion cards @done (19-03-15 21:31)
  ✔ Implement casting spell cards @done (21-04-15 19:21)
  ☐ Implement targeting spells
  ☐ Implement avatar
  ☐ Implement claimed tiles
  ☐ Implement mana
 
Later:
    ☐ Make minimal game state with, for each player: { minions :Array, cards_in_hand: Int, cards_in_deck :Int } (current player needs concrete list of cards in hand)
    ☐ Replace arrays with Vector for performance
    ☐ Make game state const: http://stackoverflow.com/questions/14556785/what-is-the-syntax-to-declare-const-parameters-and-return-values-in-haxe

Inspiration: https://raw.githubusercontent.com/anissen/elements/master/todo.todo

Card tests:
 ☐ Improve game system to allow more complex cards (e.g. react to stage changes)
     ☐ Test case: Unit that has "~ has +2 to attack when it is your turn and +2 to life when it is other players turns"
     ☐ Test case: Unit that has "Draw a card when ~ damages an energy source"
     ☐ Additional optional test cases:
         ☐ Test case: Unit that has "Attacks the first enemy unit within range in other players turns"
         ☐ Test case: Spell that has "Gain control of target unit"
         ☐ Test case: Unit that has "Allies spawned within [range 1] of ~ gain +1 to attack"
